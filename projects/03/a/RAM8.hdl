// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then
 * the in value is loaded into the memory location specified by address
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    // 3 ビットのアドレスで 8 通りまで表現できる
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    // address で指定された Register に対して、load が 0 なら読み込み、1 なら書き込みを行う
    // write のための address 指定
    DMux8Way(in=load, sel=address, a=loada, b=loadb, c=loadc, d=loadd, e=loade, f=loadf, g=loadg, h=loadh);
    // Register 自体は load で指定される read/write に関わらず、値を出力する（~write なら新しく書き込まれた値を出力~ write で新しい値が出力されるのは書き込みの次のクロック周期から）
    Register(in=in, load=loada, out=r1);
    Register(in=in, load=loadb, out=r2);
    Register(in=in, load=loadc, out=r3);
    Register(in=in, load=loadd, out=r4);
    Register(in=in, load=loade, out=r5);
    Register(in=in, load=loadf, out=r6);
    Register(in=in, load=loadg, out=r7);
    Register(in=in, load=loadh, out=r8);
    // read のための address 指定
    Mux8Way16(a=r1, b=r2, c=r3, d=r4, e=r5, f=r6, g=r7, h=r8, sel=address, out=out);
}
